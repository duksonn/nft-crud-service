// Code generated by MockGen. DO NOT EDIT.
// Source: ./service.go

// Package mocks is a generated GoMock package.
package mocks

import (
	context "context"
	reflect "reflect"
	marketplacesrvs "ssr/internal/application/marketplacesrvs"
	domain "ssr/internal/domain"

	gomock "github.com/golang/mock/gomock"
)

// MockService is a mock of Service interface.
type MockService struct {
	ctrl     *gomock.Controller
	recorder *MockServiceMockRecorder
}

// MockServiceMockRecorder is the mock recorder for MockService.
type MockServiceMockRecorder struct {
	mock *MockService
}

// NewMockService creates a new mock instance.
func NewMockService(ctrl *gomock.Controller) *MockService {
	mock := &MockService{ctrl: ctrl}
	mock.recorder = &MockServiceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockService) EXPECT() *MockServiceMockRecorder {
	return m.recorder
}

// BuyNft mocks base method.
func (m *MockService) BuyNft(arg0 context.Context, arg1 *marketplacesrvs.BuyNftInput) (*domain.NftUsers, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "BuyNft", arg0, arg1)
	ret0, _ := ret[0].(*domain.NftUsers)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// BuyNft indicates an expected call of BuyNft.
func (mr *MockServiceMockRecorder) BuyNft(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "BuyNft", reflect.TypeOf((*MockService)(nil).BuyNft), arg0, arg1)
}

// CreateNft mocks base method.
func (m *MockService) CreateNft(arg0 context.Context, arg1 *marketplacesrvs.CreateNftInput) (*domain.Nft, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CreateNft", arg0, arg1)
	ret0, _ := ret[0].(*domain.Nft)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// CreateNft indicates an expected call of CreateNft.
func (mr *MockServiceMockRecorder) CreateNft(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreateNft", reflect.TypeOf((*MockService)(nil).CreateNft), arg0, arg1)
}

// FindNfts mocks base method.
func (m *MockService) FindNfts(arg0 context.Context, arg1 *marketplacesrvs.FindNftsInput) (*domain.NftList, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "FindNfts", arg0, arg1)
	ret0, _ := ret[0].(*domain.NftList)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// FindNfts indicates an expected call of FindNfts.
func (mr *MockServiceMockRecorder) FindNfts(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "FindNfts", reflect.TypeOf((*MockService)(nil).FindNfts), arg0, arg1)
}
